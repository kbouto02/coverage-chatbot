{
  "info": {
    "title": "Coverages API for Watson Assistant",
    "version": "1.0.0"
  },
  "tags": [],
  "servers": [
    {
      "description": "Code Engine deployment",
      "url": "https://{appname}.{projectid}.{region}.codeengine.appdomain.cloud",
      "variables": {
        "appname": {
          "default": "myapp",
          "description": "application name"
        },
        "projectid": {
          "default": "projectid",
          "description": "the Code Engine project ID"
        },
        "region": {
          "default": "us-south",
          "description": "the deployment region, e.g., us-south"
        }
      }
    },
    {
      "description": "local test",
      "url": "http://127.0.0.1:{port}",
      "variables": {
        "port": {
          "default": "5000",
          "description": "local port to use"
        }
      }
    }
  ],
  "paths": {
    "/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Greeting",
        "description": "health check"
      }
    },
    "/coverages": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 30
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoveragesOut"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "all coverages",
        "description": "Retrieve all coverage records",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverageOut"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "Insert a new coverage record",
        "description": "Insert a new coverage record with the given attributes. Its new CEID is returned.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoverageIn"
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/database/recreate": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "confirmation",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "summary": "Recreate the database schema",
        "description": "Recreate the database schema and insert sample data.\nRequest must be confirmed by passing query parameter.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/coverages/ceid/{ceid}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "ceid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverageOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Coverage record by CEID",
        "description": "Retrieve a single coverage record by its CEID",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "ceid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete an coverage record by CEID",
        "description": "Delete a single coverage record identified by its CEID.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/coverages/name/{short_name}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "short_name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverageOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Coverage record by name",
        "description": "Retrieve a single coverage record by its short name",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "ValidationError": {
        "properties": {
          "detail": {
            "type": "object",
            "properties": {
              "<location>": {
                "type": "object",
                "properties": {
                  "<field_name>": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "HTTPError": {
        "properties": {
          "detail": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "current": {
            "type": "string",
            "format": "url"
          },
          "first": {
            "type": "string",
            "format": "url"
          },
          "prev": {
            "type": "string",
            "format": "url"
          },
          "pages": {
            "type": "integer"
          },
          "last": {
            "type": "string",
            "format": "url"
          },
          "per_page": {
            "type": "integer"
          },
          "next": {
            "type": "string",
            "format": "url"
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        }
      },
      "CoverageOut": {
        "type": "object",
        "properties": {
          "shortname": {
            "type": "string"
          },
          "ceid": {
            "type": "string"
          },
          "motion": {
            "type": "string"
          },
          "crosstps": {
            "type": "string"
          },
          "bpspow": {
            "type": "string"
          },
          "bpsstor": {
            "type": "string"
          },
          "bpsda": {
            "type": "string"
          },
          "bpsauto": {
            "type": "string"
          },
          "bpssec": {
            "type": "string"
          },
          "bpssus": {
            "type": "string"
          },
          "bpscross": {
            "type": "string"
          },
          "ptspow": {
            "type": "string"
          },
          "ptsstor": {
            "type": "string"
          },
          "ptsda": {
            "type": "string"
          },
          "ptsauto": {
            "type": "string"
          },
          "ptssec": {
            "type": "string"
          },
          "ptssus": {
            "type": "string"
          },
          "ptscross": {
            "type": "string"
          }
        }
      },
      "CoveragesOut": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverageOut"
            }
          }
        }
      },
      "CoverageIn": {
        "type": "object",
        "properties": {
          "shortname": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "ceid": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "motion": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "crosstps": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "bpspow": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "bpsstor": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "bpsda": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "bpsauto": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "bpssec": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "bpssus": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "bpscross": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "ptspow": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "ptsstor": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "ptsda": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "ptsauto": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "ptssec": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "ptssus": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          },
          "ptscross": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255
          }
        },
        "required": [
          "motion",
          "ptsauto",
          "ptsda",
          "mgrdaat",
          "shortname",
          "ceid"
        ]
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "API_TOKEN",
        "in": "header"
      }
    }
  }
}
